import telebot
from telebot import types

import config
from data_base.db_functions import (
    get_projects_list_by_seller_name,
    get_projects_list_by_themes_id,
)
from data_base.db_manager import DBManager
from data_base.project import Project

bot = telebot.TeleBot(config.TOKEN)
db_manager = DBManager()


def show_main_keyboard(message, text):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    my_projects_button = types.KeyboardButton("üóÑ –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üóÑ")
    search_projects_button = types.KeyboardButton("üí∞ –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üí∞")
    markup.add(my_projects_button, search_projects_button)
    bot.send_message(message.chat.id, text=text, reply_markup=markup)


@bot.message_handler(commands=["start"])
def main_menu(message):
    text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤!".format(
        message.from_user
    )
    show_main_keyboard(message, text)
    bot.send_message(message.chat.id, text="üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")


@bot.message_handler(content_types=["text"])
def main_menu_handler(message):
    if message.text == "üóÑ –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üóÑ":
        show_main_sell_keyboard(message)
        bot.register_next_step_handler(message, main_sell_handler)

    elif message.text == "üí∞ –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üí∞":
        show_main_buy_keyboard(message)
        bot.register_next_step_handler(message, main_buy_handler)


def return_to_main_menu_keyboard(message, text):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    main_menu_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(main_menu_button)
    bot.send_message(message.chat.id, text=text, reply_markup=markup)


"""
–í–ò–ö–ò–ù–ê –ß–ê–°–¢–¨: –≤—Å—ë –±—É–¥–µ—Ç —Å—É–ø–µ—Ä!!!!!!
"""


def show_main_sell_keyboard(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    to_sell_project_button = types.KeyboardButton("–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É")
    list_of_my_projects_button = types.KeyboardButton("–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
    back_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(to_sell_project_button, list_of_my_projects_button, back_button)
    bot.send_message(message.chat.id, "üóÑ –í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã üóÑ", reply_markup=markup)


def main_sell_handler(message):
    if message.text == "–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É":
        put_up_for_sale(message)
    elif message.text == "–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π":
        bot.register_next_step_handler(message, get_list_of_projects)
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        show_main_keyboard(message, "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")
        bot.register_next_step_handler(message, main_menu_handler)


def put_up_for_sale(message):
    bot.send_message(message.chat.id, text="üñä–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—Éüñä")
    project = Project(db_manager)
    project.themes_names = list()
    project.seller_name = "@" + message.from_user.username
    project.status_id = 0
    message = bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")
    bot.register_next_step_handler(message, process_name_step, project)


def process_name_step(message, project):
    project.name = message.text
    message = bot.send_message(message.chat.id, text="–ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–Ω—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞")
    bot.register_next_step_handler(message, process_price_step, project)


def process_price_step(message, project):
    price = message.text
    project.price = message.text
    if not price.isdigit():
        message = bot.reply_to(
            message, "–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–Ω—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:"
        )
        bot.register_next_step_handler(message, process_price_step, project)
        return
    message = bot.send_message(
        message.chat.id, text="–°–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?"
    )
    bot.register_next_step_handler(message, process_subscribers_step, project)


def process_subscribers_step(message, project):
    subscribers = message.text
    project.subscribers = message.text
    if not subscribers.isdigit():
        message = bot.reply_to(
            message,
            "–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —á–∏—Å–ª–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:",
        )
        bot.register_next_step_handler(message, process_subscribers_step, project)
        return
    message = bot.send_message(
        message.chat.id, text="–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –∏–ª–∏ —Ç–µ–º—ã –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:"
    )
    choose_themes(message, project)


def choose_themes(message, project):
    text = "–°–ø–∏—Å–æ–∫ —Ç–µ–º"
    choose_themes_menu1(message, text)
    bot.register_next_step_handler(message, choose_themes_menu2, project)


def choose_themes_menu1(message, text):
    markup = types.ReplyKeyboardMarkup()
    theme_button_1 = types.KeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞")
    theme_button_2 = types.KeyboardButton("–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å")
    theme_button_3 = types.KeyboardButton("–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥")
    theme_button_4 = types.KeyboardButton("–ë–∏–∑–Ω–µ—Å/–§–∏–Ω–∞–Ω—Å—ã")
    markup.add(theme_button_1, theme_button_2, theme_button_3, theme_button_4)
    bot.send_message(message.chat.id, text=text, reply_markup=markup)


def choose_themes_menu2(message, project):
    themes_name = message.text
    project.themes_names.append(themes_name)
    project.themes_id = DBManager().get_themes_id_by_names(project.themes_names)
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    yes_button = types.KeyboardButton("–î–∞")
    no_button = types.KeyboardButton("–ù–µ—Ç")
    markup.add(yes_button, no_button)
    bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ –≤—ã–±—Ä–∞—Ç—å –µ—â—ë —Ç–µ–º—É?", reply_markup=markup)
    bot.register_next_step_handler(message, choose_themes_menu3, project)


def choose_themes_menu3(message, project):
    if message.text == "–î–∞":
        choose_themes(message, project)
        # bot.register_next_step_handler(message, process_income_step, project)

    elif message.text == "–ù–µ—Ç":
        message = bot.send_message(
            message.chat.id, text="–ö–∞–∫–æ–π –¥–æ—Ö–æ–¥ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?"
        )
        bot.register_next_step_handler(message, process_income_step, project)


def process_income_step(message, project):
    income = message.text
    project.income = message.text
    if not income.isdigit():
        message = bot.reply_to(
            message, "–£–∫–∞–∂–∏—Ç–µ –¥–æ—Ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ —á–∏—Å–ª–æ–º. –ö–∞–∫–æ–π –¥–æ—Ö–æ–¥ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:"
        )
        bot.register_next_step_handler(message, process_income_step, project)
        return
    message = bot.send_message(
        message.chat.id, text="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ–±—å—è–≤–ª–µ–Ω–∏—é:"
    )
    bot.register_next_step_handler(message, process_comment_step, project)


def process_comment_step(message, project):
    project.comment = message.text
    message = bot.send_message(message.chat.id, text="–í–∞—à–µ –æ–±—å—è–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
    bot.register_next_step_handler(message, process_save_step, project)


def process_save_step(message, project):
    message = bot.send_message(message.chat.id, text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    main_menu_handler(message)
    print(project.name)
    project.save_new_project()


def get_list_of_projects(message):
    pass


# markup = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
#     theme1_button = KeyboardButton(BUTTONS['theme1'])
#     theme2_button = KeyboardButton(BUTTONS['theme2'])
#     theme3_button = KeyboardButton(BUTTONS['theme3'])
#     theme4_button = KeyboardButton(BUTTONS['theme4'])
#     markup.add(theme1_button, theme2_button, theme3_button, theme4_button)
#     return markup
"""
–ò–†–ò–ù–ê –ß–ê–°–¢–¨: –æ—Ö–∞—ë—ë—ë—ë—ë—ë—ë—ë—ë—ë—ë –æ–Ω–∏ —á–∞–Ω
"""


def show_main_buy_keyboard(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    category_button = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ç–µ–º–∞—Ç–∏–∫—É")
    price_range_button = types.KeyboardButton("–í—ã–±—Ä–∞—Ç—å —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω")
    back_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(category_button, price_range_button, back_button)
    bot.send_message(message.chat.id, "üí∞ –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üí∞", reply_markup=markup)


def main_buy_handler(message):
    if message.text == "–í—ã–±—Ä–∞—Ç—å —Ç–µ–º–∞—Ç–∏–∫—É":
        choose_theme_for_buy(message)
    elif message.text == "–í—ã–±—Ä–∞—Ç—å —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω":
        choose_price_range(message)
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        show_main_keyboard(message, "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")
        bot.register_next_step_handler(message, main_menu_handler)


# –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í—ã–±—Ä–∞—Ç—å —Ç–µ–º–∞—Ç–∏–∫—É"
def choose_theme_for_buy(message):
    # –° –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ get_all_themes() –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º –≤ themes - —Å–ª–æ–≤–∞—Ä—å —Å —Ç–µ–º–∞–º–∏ –∏ –∏—Ö –∞–π–¥–∏
    themes = DBManager().get_all_themes()
    button_list = []
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–µ–º –∏–∑ —Å–ª–æ–≤–∞—Ä—è —Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    for i in themes.keys():
        button_list.append(
            types.InlineKeyboardButton(
                text=themes[i], callback_data="ch_ct{}".format(i)
            )
        )

    # # —Å–±–æ—Ä–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –∏–∑ –∫–Ω–æ–ø–æ–∫ `InlineKeyboardButton`
    reply_markup = types.InlineKeyboardMarkup(build_menu(button_list, n_cols=2))
    # –æ—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤ —á–∞—Ç
    bot.send_message(
        message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ç–µ–º–∞—Ç–∏–∫–∏", reply_markup=reply_markup
    )
    if message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        show_main_keyboard(message, "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")
        bot.register_next_step_handler(message, main_menu_handler)


# –§—É–Ω–∫—Ü–∏—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–µ–Ω—é –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
def build_menu(buttons, n_cols, header_buttons=None, footer_buttons=None):
    menu = [buttons[i : i + n_cols] for i in range(0, len(buttons), n_cols)]
    if header_buttons:
        menu.insert(0, [header_buttons])
    if footer_buttons:
        menu.append([footer_buttons])
    return menu


@bot.callback_query_handler(func=lambda call: True)
def theme_handler(call):
    theme_id = int(call.data[5:])
    proj = DBManager().get_projects_by_theme_id(theme_id)
    bot.send_message(call.message.chat.id, "Data: {}".format(proj))
    bot.answer_callback_query(call.id)


# –î–µ–π—Å—Ç–≤–∏—è –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–∫–∏ "–í—ã–±—Ä–∞—Ç—å —Ü–µ–Ω–æ–≤–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω"
def choose_price_range(message):
    pass


bot.polling(non_stop=True)
