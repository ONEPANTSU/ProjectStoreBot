from telebot import types
import telebot
import config
from data_base.project import Project

bot = telebot.TeleBot(config.TOKEN)


def show_main_keyboard(message, text):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    my_projects_button = types.KeyboardButton("üóÑ –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üóÑ")
    search_projects_button = types.KeyboardButton("üí∞ –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üí∞")
    markup.add(my_projects_button, search_projects_button)
    bot.send_message(message.chat.id,
                     text=text, reply_markup=markup)


@bot.message_handler(commands=['start'])
def main_menu(message):
    text = "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {0.first_name}! –Ø —Ç–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –∏ –ø–æ–∫—É–ø–∫–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤!" \
        .format(message.from_user)
    show_main_keyboard(message, text)
    bot.send_message(message.chat.id, text="üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")


@bot.message_handler(content_types=['text'])
def main_menu_handler(message):
    if message.text == "üóÑ –ú–æ–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è üóÑ":
        show_main_sell_keyboard(message)
        bot.register_next_step_handler(message, main_sell_handler)

    elif message.text == "üí∞ –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üí∞":
        show_main_buy_keyboard(message)
        bot.register_next_step_handler(message, main_buy_handler)


"""
–í–ò–ö–ò–ù–ê –ß–ê–°–¢–¨: –≤—Å—ë –±—É–¥–µ—Ç —Å—É–ø–µ—Ä!!!!!!
"""
project = Project()

def show_main_sell_keyboard(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    to_sell_project_button = types.KeyboardButton("–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É")
    list_of_my_projects_button = types.KeyboardButton("–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π")
    back_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(to_sell_project_button, list_of_my_projects_button, back_button)
    bot.send_message(message.chat.id, 'üóÑ –í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã üóÑ', reply_markup=markup)


def main_sell_handler(message):
    if message.text == "–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É":
        put_up_for_sale(message)
    elif message.text == "–°–ø–∏—Å–æ–∫ –º–æ–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π":
        bot.register_next_step_handler(message, get_list_of_projects)
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        show_main_keyboard(message, "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")
        bot.register_next_step_handler(message, main_menu_handler)


def put_up_for_sale(message):
    bot.send_message(message.chat.id, text="üñä–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—Éüñä:")
    project.seller_name = "@" + message.from_user.username
    project.status_id = 0
    message = bot.send_message(message.chat.id,
                               text="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:")
    bot.register_next_step_handler(message, process_name_step)

def process_name_step(message):
    project.name = message.text
    message = bot.send_message(message.chat.id,
                            text="–ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–Ω—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?")
    bot.register_next_step_handler(message, process_price_step)


def process_price_step(message):
    price = message.text
    project.price = message.text
    if not price.isdigit():
        message = bot.reply_to(message, '–¶–µ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —á–∏—Å–ª–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ —Ü–µ–Ω—É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:')
        bot.register_next_step_handler(message, process_price_step)
        return
    message = bot.send_message(message.chat.id,
                               text="–°–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?")
    bot.register_next_step_handler(message, process_subscribers_step)

def process_subscribers_step(message):
    subscribers = message.text
    project.subscribers = message.text
    if not subscribers.isdigit():
        message = bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —á–∏—Å–ª–æ–º. –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫–æ–ª—å–∫–æ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:')
        bot.register_next_step_handler(message, process_subscribers_step)
        return
    message = bot.send_message(message.chat.id,
                               text="–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –∏–ª–∏ —Ç–µ–º—ã –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:")
    bot.register_next_step_handler(message, process_themes_id_step)

def process_themes_id_step(message):
    #choose_themes(message)
    project.themes_id = message.text
    message = bot.send_message(message.chat.id,
                               text="–ö–∞–∫–æ–π –¥–æ—Ö–æ–¥ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞?")
    bot.register_next_step_handler(message, process_income_step)

# def choose_themes_menu(message):
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     theme_button_1 = types.KeyboardButton("–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞")
#     theme_button_2 = types.KeyboardButton("–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É")
#     theme_button_3 = types.KeyboardButton("–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É")
#     theme_button_4 = types.KeyboardButton("–í—ã—Å—Ç–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –Ω–∞ –ø—Ä–æ–¥–∞–∂—É")
#     markup.add()
#     bot.send_message(message.chat.id, 'üóÑ –í–∞—à–∏ –ø—Ä–æ–µ–∫—Ç—ã üóÑ', reply_markup=markup)

#def choose_themes(message):


def process_income_step(message):
    income = message.text
    project.income = message.text
    if not income.isdigit():
        message = bot.reply_to(message, '–£–∫–∞–∂–∏—Ç–µ –¥–æ—Ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ —á–∏—Å–ª–æ–º. –ö–∞–∫–æ–π –¥–æ—Ö–æ–¥ —É –≤–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞:')
        bot.register_next_step_handler(message, process_income_step)
        return
    message = bot.send_message(message.chat.id,
                               text="–î–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –æ–±—å—è–≤–ª–µ–Ω–∏—é:")
    bot.register_next_step_handler(message, process_comment_step)

def process_comment_step(message):
    project.comment = message.text
    message = bot.send_message(message.chat.id,
                               text="–í–∞—à–µ –æ–±—å—è–≤–ª–µ–Ω–∏–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ!")
    bot.register_next_step_handler(message, process_save_step)

def process_save_step(message):
    message = bot.send_message(message.chat.id,
                               text="–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    main_menu_handler(message)
    project.save_new_project()

def get_list_of_projects(message):
    pass


"""
–ò–†–ò–ù–ê –ß–ê–°–¢–¨:
"""


def show_main_buy_keyboard(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton("...1")
    button2 = types.KeyboardButton("...2")
    back_button = types.KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
    markup.add(button1, button2, back_button)
    bot.send_message(message.chat.id, 'üí∞ –ü–æ–∏—Å–∫ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π üí∞', reply_markup=markup)


def main_buy_handler(message):
    if message.text == "...1":
        pass
        # bot.register_next_step_handler(message, )
    elif message.text == "...2":
        pass
        # bot.register_next_step_handler(message, )
    elif message.text == "–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
        show_main_keyboard(message, "üìå –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üìå")
        bot.register_next_step_handler(message, main_menu_handler)


bot.polling(non_stop=True)
